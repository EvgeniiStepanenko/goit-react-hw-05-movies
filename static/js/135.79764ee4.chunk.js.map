{"version":3,"file":"static/js/135.79764ee4.chunk.js","mappings":"6LAAO,IAAMA,EAAO,mCACPC,EAAW,8B,uJCAxB,EAAwB,4BAAxB,EAAiE,iCAAjE,EAA+G,iC,SCwE/G,EAlEqB,WACnB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,iGACQC,EAAe,IAAIC,gBAAgB,CACvCC,QAASV,EAAAA,IAGLW,EALR,UAKiBV,EAAAA,EALjB,kBAKmCC,EALnC,YAK8CM,GAL9C,SAMqBI,EAAAA,EAAAA,IAAUD,GAN/B,OAMQE,EANR,OAOUC,EAASD,EAATC,KACRR,EAASQ,GARX,4CADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAACb,IAECG,GAGH,iCACE,iBAAKW,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,wBAAKZ,EAAMa,SACX,gBACEC,IAAG,yCAAoCd,EAAMe,aAC7CC,IAAKhB,EAAMa,YAGf,4BACE,gBAAIF,UAAU,YAAd,WACE,yBACE,uCAAeX,EAAMiB,mBAEvB,2BACE,yCACA,uBAAIjB,EAAMkB,kBAGd,sCACA,eAAIP,UAAWC,EAAf,SACGZ,EAAMmB,OAAOC,KAAI,SAAAC,GAAK,OACrB,wBAAoBA,EAAMC,MAAjBD,EAAME,GADM,aAO7B,yCAEA,0BACE,2BACE,yBACE,SAAC,EAAAC,KAAD,CAAMC,GAAG,OAAT,qBAEF,yBACE,SAAC,EAAAD,KAAD,CAAMC,GAAG,UAAT,4BAIN,SAAC,KAAD,QA3Ce,uCA8CpB,C","sources":["API/API.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["export const API_KEY = `4edff4826c8bc55fc5b07cfb0ea79ea0`;\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","// extracted by mini-css-extract-plugin\nexport default {\"thumb\":\"MovieDetails_thumb__e3E88\",\"movie_info\":\"MovieDetails_movie_info__MBcuN\",\"genre_list\":\"MovieDetails_genre_list__mMoYA\"};","import { API_KEY, BASE_URL } from 'API/API';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, Outlet, useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState();\n\n  useEffect(() => {\n    async function getMovie() {\n      const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n      });\n\n      const url = `${BASE_URL}/movie/${movieId}?${searchParams}`;\n      const resp = await axios.get(url);\n      const { data } = resp;\n      setMovie(data);\n    }\n    getMovie();\n  }, [movieId]);\n\n  if (!movie) return <div>Loading...</div>;\n\n  return (\n    <>\n      <div className={css.movie_info}>\n        <div className={css.thumb}>\n          <h1>{movie.title}</h1>\n          <img\n            src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n            alt={movie.title}\n          />\n        </div>\n        <div>\n          <ul className=\"movieInfo\">\n            <li>\n              <p>User score:{movie.vote_average}</p>\n            </li>\n            <li>\n              <h3> Overview :</h3>\n              <p>{movie.overview}</p>\n            </li>\n          </ul>\n          <h2>Genres :</h2>\n          <ul className={css.genre_list}>\n            {movie.genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      <h2>Information</h2>\n\n      <div>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviws</Link>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  movieId: PropTypes.number,\n  movie: PropTypes.shape({\n    id: PropTypes.number,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    title: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n"],"names":["API_KEY","BASE_URL","movieId","useParams","useState","movie","setMovie","useEffect","searchParams","URLSearchParams","api_key","url","axios","resp","data","getMovie","className","css","title","src","poster_path","alt","vote_average","overview","genres","map","genre","name","id","Link","to"],"sourceRoot":""}